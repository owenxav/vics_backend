name: Build and Deploy Laravel App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Build Laravel App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer, npm
          extensions: mbstring, xml, ctype, json, iconv, pdo, openssl, bcmath

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install PHP Dependencies
        run: composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader

      - name: Install Node.js Dependencies
        run: npm install && npm run build

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Upload Laravel Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: laravel-build
          path: .

  deploy:
    name: Deploy to AWS Lightsail
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Download Build Artifacts
        uses: actions/download-artifact@v4
        with:
          name: laravel-build
          path: /home/ubuntu/app

      - name: Deploy to AWS Lightsail
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          LIGHTSAIL_IP: "51.24.31.0"
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem

          # Connect to Lightsail and deploy
          scp -i private_key.pem -r /home/ubuntu/app ubuntu@$LIGHTSAIL_IP:/var/www/html
          ssh -i private_key.pem ubuntu@$LIGHTSAIL_IP << 'EOF'
            cd /var/www/html
            composer install --no-dev --no-interaction --prefer-dist --optimize-autoloader
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan storage:link
            chmod -R 775 storage bootstrap/cache
            sudo systemctl restart apache2
          EOF
